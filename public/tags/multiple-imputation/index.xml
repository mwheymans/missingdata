<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Multiple Imputation on Missing Data Solutions</title>
    <link>https://missingdatasolutions.rbind.io/tags/multiple-imputation/</link>
    <description>Recent content in Multiple Imputation on Missing Data Solutions</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://missingdatasolutions.rbind.io/tags/multiple-imputation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>the R psfmi package</title>
      <link>https://missingdatasolutions.rbind.io/psfmi/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://missingdatasolutions.rbind.io/psfmi/</guid>
      <description>IntroductionOn this page you will find information about the psfmi package.The package contains functions to pool logistic (psfmi_lr), Coxregression (psfmi_coxr) and linear and logistic mixed models (psfmi_mm)in multiply imputed datasets. It is also possible to apply backward variableselection in multiple imputed datasets (Be aware that backward selectionmay result in overfitted and optimistic prediction models, see TRIPOD). Backward selection should therefore be followed by internal validation of the model.</description>
    </item>
    
    <item>
      <title>Multiple Imputation and Cross-validation</title>
      <link>https://missingdatasolutions.rbind.io/2020/02/mi-cross-validation/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://missingdatasolutions.rbind.io/2020/02/mi-cross-validation/</guid>
      <description>IntroductionThis page contains information of three methods that are implementedin the psfmi package and that combine Multiple Imputation with Cross-validation for the validation of logistic prediction models. Currently the methods are only available via downloading thepsfmi package via Github. Do this:
install.packages(“devtools”)
library(devtools)
devtools::install_github(“mwheymans/psfmi”)
library(psfmi)
The cross-validation methods are adjustments of the methods described in thepaper of Mertens BJ and Miles A.
The methods are implemented in the function psfmi_perform and are called:cv_MI, cv_MI_RR and MI_cv_RR.</description>
    </item>
    
    <item>
      <title>Package psfmi</title>
      <link>https://missingdatasolutions.rbind.io/2019/05/psfmi/</link>
      <pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://missingdatasolutions.rbind.io/2019/05/psfmi/</guid>
      <description>More information about the package can be found on the Cran website.
You can easily install the package by running install.packages(&#34;psfmi&#34;) in the Console window in Rstudio or R. The development version can be installed from Github by using:install.packages(&#34;devtools&#34;)
library(devtools)
devtools::install_github(&#34;mwheymans/psfmi&#34;)
library(psfmi)
If you have questions about the psfmi package send an email to mw.heymans@amsterdamumc.nl or leave a message below. Enjoy using the package!</description>
    </item>
    
    <item>
      <title>Logistic Regression after Multiple Imputation - different selection criteria</title>
      <link>https://missingdatasolutions.rbind.io/2019/01/backward-logistic-regression-after-multiple-imputation/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://missingdatasolutions.rbind.io/2019/01/backward-logistic-regression-after-multiple-imputation/</guid>
      <description>The different methods are described in the papers of Marshall et al and Eekhout, vd Wiel and Heymans.
Be aware that backward selection may result in overfitted and optimistic prediction models, see TRIPOD. Backward selection should therefore be followed by internal validation of the model.
ExamplesPooling without BW and method D1Pooling with BW and method D3Logistic RegressionPooling without BW and method D1library(psfmi)pool_lr &amp;lt;- psfmi_lr(data=lbpmilr, nimp=5, impvar=&amp;quot;Impnr&amp;quot;, Outcome=&amp;quot;Chronic&amp;quot;,predictors=c(&amp;quot;Gender&amp;quot;, &amp;quot;Smoking&amp;quot;, &amp;quot;Function&amp;quot;, &amp;quot;JobControl&amp;quot;,&amp;quot;JobDemands&amp;quot;, &amp;quot;SocialSupport&amp;quot;), method=&amp;quot;D1&amp;quot;)pool_lr$RR_model## $`Step 1 - no variables removed -`## term estimate std.</description>
    </item>
    
  </channel>
</rss>